<?xml version="1.0" encoding="UTF-8"?>
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数 -->
<configuration>
	<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
	<!--变量配置 -->
	<Properties>
		<!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符 -->
		<!-- %logger{36} 表示 Logger 名字最长36个字符 -->
		<property name="LOG_PATTERN" value="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%level] [%contextName] [%thread] [%logger{80}:%L] %msg%n" />
		<!-- 定义日志存储的路径 -->
		<property name="LOG_PATH" value="/data1/logs/basicPlatform-application" />
		<property name="FILE_NAME" value="basicPlatform-application" />
	</Properties>

	<appenders>
		<console name="Console" target="SYSTEM_OUT">
			<!--输出日志的格式 -->
			<PatternLayout pattern="${LOG_PATTERN}" />
			<!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY" />
		</console>

		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RollingFileDebug" fileName="${LOG_PATH}/debug.log" filePattern="${LOG_PATH}/debug-%d{yyyyMMdd}.log.%i">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY" />
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<!--interval属性用来指定多久滚动一次，默认是1 hour -->
				<TimeBasedTriggeringPolicy interval="24" modulate="true" />
				<SizeBasedTriggeringPolicy size="1024MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖 -->
			<DefaultRolloverStrategy max="60" />
		</RollingFile>
		<!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RollingFileInfo" fileName="${LOG_PATH}/info.log" filePattern="${LOG_PATH}/info-%d{yyyyMMdd}.log.%i">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<!--interval属性用来指定多久滚动一次，默认是1 hour -->
				<TimeBasedTriggeringPolicy interval="24" modulate="true" />
				<SizeBasedTriggeringPolicy size="1024MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖 -->
			<DefaultRolloverStrategy max="60" />
		</RollingFile>

		<!-- 这个会打印出所有的warn及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RollingFileWarn" fileName="${LOG_PATH}/warn.log" filePattern="${LOG_PATH}/${FILE_NAME}-WARN-%d{yyyy-MM-dd}_%i.log.gz">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY" />
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<!--interval属性用来指定多久滚动一次，默认是1 hour -->
				<TimeBasedTriggeringPolicy interval="24" modulate="true" />
				<SizeBasedTriggeringPolicy size="1024MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖 -->
			<DefaultRolloverStrategy max="60" />
		</RollingFile>

		<!-- 这个会打印出所有的error及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
		<RollingFile name="RollingFileError" fileName="${LOG_PATH}/error.log" filePattern="${LOG_PATH}/${FILE_NAME}-ERROR-%d{yyyy-MM-dd}_%i.log.gz">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY" />
			<PatternLayout pattern="${LOG_PATTERN}" />
			<Policies>
				<!--interval属性用来指定多久滚动一次，默认是1 hour -->
				<TimeBasedTriggeringPolicy interval="24" modulate="true" />
				<SizeBasedTriggeringPolicy size="1024MB" />
			</Policies>
			<!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖 -->
			<DefaultRolloverStrategy max="60" />
		</RollingFile>

	</appenders>

	<!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。 -->
	<!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<AsyncLogger  name="com.pwc.sdc.basicPlatform.dao" level="debug" additivity="false">
		<!-- 设为debug就可以打印sql -->
			<AppenderRef ref="Console" />
			<AppenderRef ref="RollingFileDebug" />
		</AsyncLogger >
		<AsyncLogger  name="com.baomidou" level="info" additivity="false">
			<AppenderRef ref="Console" />
			<AppenderRef ref="RollingFileDebug" />
		</AsyncLogger >
		<AsyncLogger  name="org.springframework" level="info" additivity="false">
			<AppenderRef ref="Console" />
			<AppenderRef ref="RollingFileDebug" />
		</AsyncLogger >
		<AsyncRoot  level="info">
			<AppenderRef ref="Console" />
			<AppenderRef ref="RollingFileDebug" />
			<AppenderRef ref="RollingFileInfo" />
			<AppenderRef ref="RollingFileWarn" />
			<AppenderRef ref="RollingFileError" />
		</AsyncRoot>
	</loggers>

</configuration>